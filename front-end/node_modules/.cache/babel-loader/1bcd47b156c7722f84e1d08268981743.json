{"ast":null,"code":"var _jsxFileName = \"/Users/claysuttner/Projects/React/django-react-task-tracker/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'Doctors Appointment',\n    day: 'Feb 5th at 2:00PM',\n    description: 'Meet Dr. Green at Sansum Clinic for a physical'\n  }, {\n    id: 2,\n    title: 'Meeting at School',\n    day: 'Feb 1st at 11:00AM',\n    description: 'Meet with the computer science club to talk about coding and stuff'\n  }, {\n    id: 3,\n    title: 'Grocery Shopping',\n    day: 'Feb 2nd at 8:00AM',\n    description: 'Go to Whole Foods to buy groceries that are too expensive'\n  }]); // delete task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // toggle showing description\n\n\n  const toggleShowDesc = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      showDesc: !task.showDesc\n    } : task));\n  }; // add tasks\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { ...task,\n      id: id\n    };\n    setTasks([...tasks, newTask]);\n    console.log('new task id: ', newTask.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleShowDesc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gDNCDvQ2s4berEWWbONcBheD0Qg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/claysuttner/Projects/React/django-react-task-tracker/front-end/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","id","title","day","description","deleteTask","filter","task","toggleShowDesc","map","showDesc","addTask","Math","floor","random","newTask","console","log","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,qBAFT;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAG,mBAFV;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,kBAFT;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAbiC,CAAD,CAAlC,CAFa,CAuBb;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAxBa,CA4Bb;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAYF,IAAD,IACTA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGM,IAAL;AAAWG,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAA3B,KAAjB,GAAyDH,IAD3D,CADM,CAAR;AAKD,GAND,CA7Ba,CAqCb;;;AACA,QAAMI,OAAO,GAAIJ,IAAD,IAAU;AACxB,UAAMN,EAAE,GAAGW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG,EAAE,GAAGR,IAAL;AAAWN,MAAAA,EAAE,EAAEA;AAAf,KAAhB;AACAD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWgB,OAAX,CAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAAO,CAACd,EAArC;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,MAAMH,cAAc,CAAC,CAACD,WAAF,CAD7B;AAEE,MAAA,OAAO,EAAEA;AAFX;AAAA;AAAA;AAAA;AAAA,YADF,EAKGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEc;AAAhB;AAAA;AAAA;AAAA;AAAA,YALlB,EAMGZ,KAAK,CAACmB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,KAAd;AACA,MAAA,QAAQ,EAAEM,UADV;AAEA,MAAA,QAAQ,EAAEG;AAFV;AAAA;AAAA;AAAA;AAAA,YADD,GAKC,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA7DQZ,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport Header from  './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      title: 'Doctors Appointment',\n      day: 'Feb 5th at 2:00PM',\n      description: 'Meet Dr. Green at Sansum Clinic for a physical'\n    },\n    {\n      id: 2,\n      title:  'Meeting at School',\n      day: 'Feb 1st at 11:00AM',\n      description: 'Meet with the computer science club to talk about coding and stuff'\n    },\n    {\n      id: 3,\n      title: 'Grocery Shopping',\n      day: 'Feb 2nd at 8:00AM',\n      description: 'Go to Whole Foods to buy groceries that are too expensive'\n    },\n  ])\n\n  // delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // toggle showing description\n  const toggleShowDesc = (id) => {\n    setTasks(\n      tasks.map( (task) => \n        task.id === id ? { ...task, showDesc: !task.showDesc } : task\n      )\n    )\n  }\n\n  // add tasks\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { ...task, id: id }\n    setTasks([...tasks, newTask])\n    console.log('new task id: ', newTask.id)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks}\n        onDelete={deleteTask}\n        onToggle={toggleShowDesc} />\n      ) : (\n        'No Tasks To Show'\n      )} \n    </div>\n  )\n}\n\nexport default App \n"]},"metadata":{},"sourceType":"module"}